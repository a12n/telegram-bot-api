name: Telegram Bot API

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  Build:
    strategy:
      matrix:
        os: [windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - run: Get-ChildItem -Path C:\ -Recurse msvcp140d.dll
        if: runner.os == 'Windows'
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: sudo apt-get install -y cmake g++ gperf libssl-dev make zlib1g-dev
        if: runner.os == 'Linux'
      - run: vcpkg install gperf:x64-windows openssl:x64-windows zlib:x64-windows
        if: runner.os == 'Windows'
      - run: mkdir build
      - run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=.. ..
        if: runner.os == 'Linux'
        working-directory: build
      - run: cmake -A x64 -DCMAKE_INSTALL_PREFIX:PATH=.. -DCMAKE_TOOLCHAIN_FILE:FILEPATH=$Env:VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake ..
        if: runner.os == 'Windows'
        working-directory: build
      - run: cmake --build build --target install
      - uses: actions/upload-artifact@v3
        with:
          name: telegram-bot-api_${{ matrix.os }}
          path: |
            bin/telegram-bot-api*
            bin/libcrypto-*.dll
            bin/libssl-*.dll
            bin/zlib*.dll
            !bin/telegram-bot-api.pdb
